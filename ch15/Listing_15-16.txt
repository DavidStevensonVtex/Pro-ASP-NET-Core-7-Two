// Listing 15.16 Using user secrets in the Program.cs file in the Platform folder

using Platform;

var builder = WebApplication.CreateBuilder(args);

var servicesConfig = builder.Configuration;
builder.Services.Configure<MessageOptions>(
	servicesConfig.GetSection("Location"));

var servicesEnv = builder.Environment;
// - use environment to set up services

var app = builder.Build();
// - use configuration settings to t set up pipeline

var pipelineConfig = app.Configuration;
// - use environment to set up pipeline

var pipelineEnv = app.Environment;

app.UseMiddleware<LocationMiddleware>();

app.MapGet("config", async (HttpContext context, IConfiguration config, IWebHostEnvironment env) =>
{
	string? defaultDebug = config["Logging:LogLevel:Default"];
	await context.Response.WriteAsync($"The config setting is: {defaultDebug}");
	await context.Response.WriteAsync($"\nThe env setting is: {env.EnvironmentName}");
	string? wsID = config["WebService:Id"];
	string? wsKey = config["WebService:Key"];
	await context.Response.WriteAsync($"\nThe secret ID is: {wsID}");
	await context.Response.WriteAsync($"\nThe secret Key is: {wsKey}");
});

app.MapGet("/", async context =>
{
	await context.Response.WriteAsync("Hello World!");
});

app.Run();
