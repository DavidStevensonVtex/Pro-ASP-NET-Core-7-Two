@* Listing 28.18 Specifying a model binding prefix in the FormHandler.cshtml file in the Pages folder *@

@page "/pages/form/{id:long?}"
@model WebApp.Pages.FormHandlerModel

<div class="m-2">
    <h5 class="bg-primary text-white text-center p-2">HTML Forms</h5>
    <form asp-page="FormHandler" method="post" id="htmlform">
        <div class="form-group">
            <label>Name</label>
            <input class="form-control" asp-for="Product.Name" name="name" />
        </div>
        <div class="form-group">
            <label>Price</label>
            <input class="form-control" asp-for="Product.Price" name="price" />
        </div>
        <dov action="form-group">
            <label>Category Name</label>
            @{ #pragma warning disable CS8602 }
            <input class="form-control" asp-for="Product.Category.Name" />
            @{ #pragma warning restore CS8602 }
        </dov>
        <button type="submit" class="btn btn-primary mt-2">Submit</button>
    </form>
</div>

// Listing 28.18b Specifying a model binding prefix in the FormHandler.cshtml.cs file in the Pages folder

namespace WebApp.Pages
{
    public class FormHandlerModel : PageModel
    {
        private DataContext context;

        public FormHandlerModel(DataContext dbContext)
        {
            context = dbContext;
        }

        [BindProperty]
        public Product? Product { get; set; } = new() { Name = string.Empty };

        [BindProperty(Name = "Product.Category")]
        public Category Category { get; set; } = new() { Name = string.Empty };

        public async Task OnGetAsync(long id = 1)
        {
            Product = await context.Products
                .Include(p => p.Category)
                .Include(p => p.Supplier)
                .FirstAsync(p => p.ProductId == id);
        }

        public IActionResult OnPost()
        {
            TempData["product"] =
                System.Text.Json.JsonSerializer.Serialize(Product);
            TempData["category"] = 
                System.Text.Json.JsonSerializer.Serialize(Category);
            return RedirectToPage("FormResults");
        }
    }
}
