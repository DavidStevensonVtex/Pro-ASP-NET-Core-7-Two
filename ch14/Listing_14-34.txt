// Listing 14.34 Using a factory function in the Program.cs file in the Platform folder

using Platform;
using Platform.Services;

var builder = WebApplication.CreateBuilder(args);

//IWebHostEnvironment env = builder.Environment;
IConfiguration config = builder.Configuration;

builder.Services.AddScoped<IResponseFormatter>(serviceProvider =>
{
	string? typeName = config["services:IResponseFormatter"];
	return (IResponseFormatter)ActivatorUtilities.CreateInstance(serviceProvider,
		typeName == null ? typeof(GuidService) : Type.GetType(typeName, true));
});

builder.Services.AddScoped<ITimeStamper, DefaultTimeStamper>();

var app = builder.Build();

app.UseMiddleware<WeatherMiddleware>();

app.MapEndpoint<WeatherEndpoint>("endpoint/class");

app.MapGet("endpoint/function", 
	async (HttpContext context, IResponseFormatter formatter) =>
	{
		await formatter.Format(context, "It is sunny in LA");
	});

app.Run();
