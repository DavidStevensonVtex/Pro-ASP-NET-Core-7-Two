// Listing 13.25 Using a custom constraint in the Program.cs file in the Platform folder

using Platform;

var builder = WebApplication.CreateBuilder(args);

builder.Services.Configure<RouteOptions>(opts =>
{
	opts.ConstraintMap.Add("countryName", typeof(CountryRouteConstraint));
});

var app = builder.Build();

app.MapGet("capital/{country:countryName}", Capital.Endpoint);

app.MapGet("{first:alpha:length(3)}/{second:bool}", async context =>
{
	await context.Response.WriteAsync("Request Was Routed\n");
	foreach (var kvp in context.Request.RouteValues)
	{
		await context.Response.WriteAsync($"{kvp.Key} : {kvp.Value}\n");
	}
});

// AmbiguousMatchException: The request matched multiple endpoints. Matches:
// HTTP: GET capital/{country:countryName}
// HTTP: GET capital/{country:regex(^uk|france|monaco$)}
// Fallback {*path:nonfile}
//app.MapGet("capital/{country:regex(^uk|france|monaco$)}", Capital.Endpoint);
app.MapGet("size/{city?}", Population.Endpoint)
	.WithMetadata(new RouteNameMetadata("population"));

app.MapFallback(async context =>
{
	await context.Response.WriteAsync("Routed to fallback endpoint");
});

app.Run();
